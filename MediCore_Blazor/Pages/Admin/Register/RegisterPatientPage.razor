@page "/admin/register/patient"
@using MediCore_Blazor.Services
@using MediCore_Library.Models.DTOs.DTO_Entities
@using MediCore_Library.Models.DTOs.DTO_Entities.Full
@using MediCore_Library.Models.Identities

@inject HttpClient http
@inject NavigationManager navigationManager
@inject GlobalConfig config

<h3>Register Patient</h3>

<EditForm Model="registerRequest" OnValidSubmit="RegisterPatient">
	<DataAnnotationsValidator />
	<ValidationSummary />

	<div>
		<label>Email</label>
		<InputText @bind-Value="registerRequest.Email" />
	</div>
	<div>
		<label>Password</label>
		<InputText @bind-Value="registerRequest.Password" type="password"/>
	</div>
	<div>
		<label>First Name</label>
		<InputText @bind-Value="registerRequest.Patient!.FirstName" />
	</div>
	<div>
		<label>Last Name</label>
		<InputText @bind-Value="registerRequest.Patient.LastName" />
	</div>
	<div>
		<label>Gender</label>
		<InputText @bind-Value="registerRequest.Patient.Gender" />
	</div>
	<div>
		<label>Date of Birth</label>
		<InputDate @bind-Value="date" min="@DateTime.Today.AddYears(-120).ToString("yyyy-MM-dd")" max="@DateTime.Today.ToString("yyyy-MM-dd")"/>
	</div>
	<div>
		<label>Phone Number</label>
		<InputText @bind-Value="registerRequest.Patient.PhoneNumber" />
	</div>
	<div>
		<label>Street</label>
		<InputText @bind-Value="registerRequest.Patient.Address!.Street" />
	</div>
	<div>
		<label>City</label>
		<InputText @bind-Value="registerRequest.Patient.Address.City" />
	</div>
	<div>
		<label>Province or State</label>
		<InputText @bind-Value="registerRequest.Patient.Address.ProvinceOrState" />
	</div>
	<div>
		<label>Country</label>
		<InputText @bind-Value="registerRequest.Patient.Address.Country" />
	</div>
	<div>
		<label>Postal Code</label>
		<InputText @bind-Value="registerRequest.Patient.Address.PostalCode" />
	</div>
	<div>
		<button type="submit">Register</button>
	</div>
</EditForm>

@code {
	private Register registerRequest = new Register();
	private DateTime date;

	protected override void OnInitialized()
	{
		registerRequest.Patient = new PatientFullDTO
		{
			Address = new AddressDTO()
		};
		date = new DateTime(2000,1,1);
	}

	private async Task RegisterPatient()
	{
		registerRequest.Doctor = null;
		registerRequest.Staff = null;
		registerRequest.Patient!.DateOfBirth = DateOnly.FromDateTime(date);

		var response = await http.PostAsJsonAsync($"{config.BaseUrl}/authorize/register/patient", registerRequest);
		Console.WriteLine(response);
		if (response.IsSuccessStatusCode)
		{
			navigationManager.NavigateTo("/admin/register");
		}
	}
}
